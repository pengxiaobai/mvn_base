===========线程================
1.什么是线程
	线程是操作系统能够进行运算调度的最小单位，它被包含在进程之中，是进程中的实际运作单位
2.如何在java实现线程
	1.继承Thread
	2.实现Runnable接口（没有返回值）
	3.实现 Callable接口（有返回值）
3.start()方法和run()方法的区别
	只有调用了start()方法，才会表现出多线程的特性
	直接调用run()就和调用普通方法一样
4.线程的运行状态
	新建---就绪---运行---阻塞--停止
5.什么是线程安全
	程序在多线程和单线程中执行永远都能获得一样的结果，那程序就是安全
	线程安全的几个级别
	（1）不可变
	像String,Integer,Long都是final类型的类，多线程不可能改变了他们的
	值，除非重新创建一个
	（2）绝对线程安全
	不管运行时环境如何，调度者都不需要额外的同步措施
	（3）相对线程安全
	想对安全就是我们通常意义上说的线程安全，像Vectot这种，add、remove方法都是原子
	操作，不会被打断，但也仅限于此，如果有个线程在遍历某个Vector、有个线程同时在add
	这个Vector，99%的情况下都会出现ConcurrentModificationException，也就是 fail-fast机制 。
	（4）线程非安全
	这个就没什么好说的了，ArrayList、LinkedList、HashMap等都是线程非安全的类
6.sleep方法和wait方法有什么区别
	这个问题常问，sleep方法和wait方法都可以用来放弃CPU一定的时间，不同点在于如果线程持有某个对象的监视器，
	sleep方法不会放弃这个对象的监视器，wait方法会放弃这个对象的监视器
7.单例模式的线程安全性
	（1）饿汉式单例模式的写法：线程安全
	（2）懒汉式单例模式的写法：非线程安全
	（3）双检锁单例模式的写法：线程安全
8.线程类的构造方法、静态块是被哪个线程调用的
	线程类的构造方法、静态块是被new这个线程类所在的线程所调用的，
	而run方法里面的代码才是被线程自身所调用的。
9.Semaphore有什么作用
	Semaphore就是一个信号量，它的作用是 限制某段代码块的并发数 。Semaphore有一个构造函数，
	可以传入一个int型整数n，表示某段代码最多只有n个线程可以访问，如果超出了n，那么请等待，
	等到某个线程执行完毕这段代码块，下一个线程再进入。由此可以看出如果Semaphore构造函数中传入
	的int型整数n=1，相当于变成了一个synchronized了。
==============================


==================================

=================================